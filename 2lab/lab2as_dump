
lab2_as:     file format elf32-i386


Disassembly of section .interp:

00000194 <.interp>:
 194:	2f                   	das    
 195:	6c                   	insb   (%dx),%es:(%edi)
 196:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 19d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 1a4:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.gnu.build-id:

000001a8 <.note.gnu.build-id>:
 1a8:	04 00                	add    $0x0,%al
 1aa:	00 00                	add    %al,(%eax)
 1ac:	14 00                	adc    $0x0,%al
 1ae:	00 00                	add    %al,(%eax)
 1b0:	03 00                	add    (%eax),%eax
 1b2:	00 00                	add    %al,(%eax)
 1b4:	47                   	inc    %edi
 1b5:	4e                   	dec    %esi
 1b6:	55                   	push   %ebp
 1b7:	00 5c 7c fc          	add    %bl,-0x4(%esp,%edi,2)
 1bb:	0c 20                	or     $0x20,%al
 1bd:	71 4c                	jno    20b <_init-0xdf5>
 1bf:	b5 7d                	mov    $0x7d,%ch
 1c1:	55                   	push   %ebp
 1c2:	d1 00                	roll   (%eax)
 1c4:	bf ab f3 4f 5c       	mov    $0x5c4ff3ab,%edi
 1c9:	1f                   	pop    %ds
 1ca:	a3                   	.byte 0xa3
 1cb:	ea                   	.byte 0xea

Disassembly of section .note.ABI-tag:

000001cc <.note.ABI-tag>:
 1cc:	04 00                	add    $0x0,%al
 1ce:	00 00                	add    %al,(%eax)
 1d0:	10 00                	adc    %al,(%eax)
 1d2:	00 00                	add    %al,(%eax)
 1d4:	01 00                	add    %eax,(%eax)
 1d6:	00 00                	add    %al,(%eax)
 1d8:	47                   	inc    %edi
 1d9:	4e                   	dec    %esi
 1da:	55                   	push   %ebp
 1db:	00 00                	add    %al,(%eax)
 1dd:	00 00                	add    %al,(%eax)
 1df:	00 03                	add    %al,(%ebx)
 1e1:	00 00                	add    %al,(%eax)
 1e3:	00 02                	add    %al,(%edx)
 1e5:	00 00                	add    %al,(%eax)
 1e7:	00 00                	add    %al,(%eax)
 1e9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gnu.hash:

000001ec <.gnu.hash>:
 1ec:	02 00                	add    (%eax),%al
 1ee:	00 00                	add    %al,(%eax)
 1f0:	07                   	pop    %es
 1f1:	00 00                	add    %al,(%eax)
 1f3:	00 01                	add    %al,(%ecx)
 1f5:	00 00                	add    %al,(%eax)
 1f7:	00 05 00 00 00 00    	add    %al,0x0
 1fd:	20 00                	and    %al,(%eax)
 1ff:	20 00                	and    %al,(%eax)
 201:	00 00                	add    %al,(%eax)
 203:	00 07                	add    %al,(%edi)
 205:	00 00                	add    %al,(%eax)
 207:	00                   	.byte 0x0
 208:	ad                   	lods   %ds:(%esi),%eax
 209:	4b                   	dec    %ebx
 20a:	e3 c0                	jecxz  1cc <_init-0xe34>

Disassembly of section .dynsym:

0000020c <.dynsym>:
	...
 21c:	58                   	pop    %eax
	...
 225:	00 00                	add    %al,(%eax)
 227:	00 20                	add    %ah,(%eax)
 229:	00 00                	add    %al,(%eax)
 22b:	00 10                	add    %dl,(%eax)
	...
 235:	00 00                	add    %al,(%eax)
 237:	00 12                	add    %dl,(%edx)
 239:	00 00                	add    %al,(%eax)
 23b:	00 17                	add    %dl,(%edi)
	...
 245:	00 00                	add    %al,(%eax)
 247:	00 22                	add    %ah,(%edx)
 249:	00 00                	add    %al,(%eax)
 24b:	00 74 00 00          	add    %dh,0x0(%eax,%eax,1)
	...
 257:	00 20                	add    %ah,(%eax)
 259:	00 00                	add    %al,(%eax)
 25b:	00 26                	add    %ah,(%esi)
	...
 265:	00 00                	add    %al,(%eax)
 267:	00 12                	add    %dl,(%edx)
 269:	00 00                	add    %al,(%eax)
 26b:	00 83 00 00 00 00    	add    %al,0x0(%ebx)
 271:	00 00                	add    %al,(%eax)
 273:	00 00                	add    %al,(%eax)
 275:	00 00                	add    %al,(%eax)
 277:	00 20                	add    %ah,(%eax)
 279:	00 00                	add    %al,(%eax)
 27b:	00 01                	add    %al,(%ecx)
 27d:	00 00                	add    %al,(%eax)
 27f:	00 04 20             	add    %al,(%eax,%eiz,1)
 282:	00 00                	add    %al,(%eax)
 284:	04 00                	add    $0x0,%al
 286:	00 00                	add    %al,(%eax)
 288:	11 00                	adc    %eax,(%eax)
 28a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0000028c <.dynstr>:
 28c:	00 5f 49             	add    %bl,0x49(%edi)
 28f:	4f                   	dec    %edi
 290:	5f                   	pop    %edi
 291:	73 74                	jae    307 <_init-0xcf9>
 293:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 29a:	64 
 29b:	00 70 72             	add    %dh,0x72(%eax)
 29e:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 2a5:	63 78 61             	arpl   %di,0x61(%eax)
 2a8:	5f                   	pop    %edi
 2a9:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 2af:	7a 65                	jp     316 <_init-0xcea>
 2b1:	00 5f 5f             	add    %bl,0x5f(%edi)
 2b4:	6c                   	insb   (%dx),%es:(%edi)
 2b5:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 2bc:	72 74                	jb     332 <_init-0xcce>
 2be:	5f                   	pop    %edi
 2bf:	6d                   	insl   (%dx),%es:(%edi)
 2c0:	61                   	popa   
 2c1:	69 6e 00 6c 69 62 63 	imul   $0x6362696c,0x0(%esi),%ebp
 2c8:	2e 73 6f             	jae,pn 33a <_init-0xcc6>
 2cb:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%edi)
 2d0:	49                   	dec    %ecx
 2d1:	42                   	inc    %edx
 2d2:	43                   	inc    %ebx
 2d3:	5f                   	pop    %edi
 2d4:	32 2e                	xor    (%esi),%ch
 2d6:	31 2e                	xor    %ebp,(%esi)
 2d8:	33 00                	xor    (%eax),%eax
 2da:	47                   	inc    %edi
 2db:	4c                   	dec    %esp
 2dc:	49                   	dec    %ecx
 2dd:	42                   	inc    %edx
 2de:	43                   	inc    %ebx
 2df:	5f                   	pop    %edi
 2e0:	32 2e                	xor    (%esi),%ch
 2e2:	30 00                	xor    %al,(%eax)
 2e4:	5f                   	pop    %edi
 2e5:	49                   	dec    %ecx
 2e6:	54                   	push   %esp
 2e7:	4d                   	dec    %ebp
 2e8:	5f                   	pop    %edi
 2e9:	64 65 72 65          	fs gs jb 352 <_init-0xcae>
 2ed:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 2f4:	4d 
 2f5:	43                   	inc    %ebx
 2f6:	6c                   	insb   (%dx),%es:(%edi)
 2f7:	6f                   	outsl  %ds:(%esi),(%dx)
 2f8:	6e                   	outsb  %ds:(%esi),(%dx)
 2f9:	65 54                	gs push %esp
 2fb:	61                   	popa   
 2fc:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 300:	5f                   	pop    %edi
 301:	5f                   	pop    %edi
 302:	67 6d                	insl   (%dx),%es:(%di)
 304:	6f                   	outsl  %ds:(%esi),(%dx)
 305:	6e                   	outsb  %ds:(%esi),(%dx)
 306:	5f                   	pop    %edi
 307:	73 74                	jae    37d <_init-0xc83>
 309:	61                   	popa   
 30a:	72 74                	jb     380 <_init-0xc80>
 30c:	5f                   	pop    %edi
 30d:	5f                   	pop    %edi
 30e:	00 5f 49             	add    %bl,0x49(%edi)
 311:	54                   	push   %esp
 312:	4d                   	dec    %ebp
 313:	5f                   	pop    %edi
 314:	72 65                	jb     37b <_init-0xc85>
 316:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 31d:	4d 
 31e:	43                   	inc    %ebx
 31f:	6c                   	insb   (%dx),%es:(%edi)
 320:	6f                   	outsl  %ds:(%esi),(%dx)
 321:	6e                   	outsb  %ds:(%esi),(%dx)
 322:	65 54                	gs push %esp
 324:	61                   	popa   
 325:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)

Disassembly of section .gnu.version:

0000032a <.gnu.version>:
 32a:	00 00                	add    %al,(%eax)
 32c:	00 00                	add    %al,(%eax)
 32e:	02 00                	add    (%eax),%al
 330:	03 00                	add    (%eax),%eax
 332:	00 00                	add    %al,(%eax)
 334:	02 00                	add    (%eax),%al
 336:	00 00                	add    %al,(%eax)
 338:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

0000033c <.gnu.version_r>:
 33c:	01 00                	add    %eax,(%eax)
 33e:	02 00                	add    (%eax),%al
 340:	38 00                	cmp    %al,(%eax)
 342:	00 00                	add    %al,(%eax)
 344:	10 00                	adc    %al,(%eax)
 346:	00 00                	add    %al,(%eax)
 348:	00 00                	add    %al,(%eax)
 34a:	00 00                	add    %al,(%eax)
 34c:	73 1f                	jae    36d <_init-0xc93>
 34e:	69 09 00 00 03 00    	imul   $0x30000,(%ecx),%ecx
 354:	42                   	inc    %edx
 355:	00 00                	add    %al,(%eax)
 357:	00 10                	add    %dl,(%eax)
 359:	00 00                	add    %al,(%eax)
 35b:	00 10                	add    %dl,(%eax)
 35d:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 364:	4e                   	dec    %esi
 365:	00 00                	add    %al,(%eax)
 367:	00 00                	add    %al,(%eax)
 369:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0000036c <.rel.dyn>:
 36c:	9a 11 00 00 08 00 00 	lcall  $0x0,$0x8000011
 373:	00 a6 11 00 00 08    	add    %ah,0x8000011(%esi)
 379:	00 00                	add    %al,(%eax)
 37b:	00 b7 11 00 00 08    	add    %dh,0x8000011(%edi)
 381:	00 00                	add    %al,(%eax)
 383:	00 c8                	add    %cl,%al
 385:	11 00                	adc    %eax,(%eax)
 387:	00 08                	add    %cl,(%eax)
 389:	00 00                	add    %al,(%eax)
 38b:	00 d9                	add    %bl,%cl
 38d:	11 00                	adc    %eax,(%eax)
 38f:	00 08                	add    %cl,(%eax)
 391:	00 00                	add    %al,(%eax)
 393:	00 e4                	add    %ah,%ah
 395:	3e 00 00             	add    %al,%ds:(%eax)
 398:	08 00                	or     %al,(%eax)
 39a:	00 00                	add    %al,(%eax)
 39c:	e8 3e 00 00 08       	call   80003df <_end+0x7ffc393>
 3a1:	00 00                	add    %al,(%eax)
 3a3:	00 f8                	add    %bh,%al
 3a5:	3f                   	aas    
 3a6:	00 00                	add    %al,(%eax)
 3a8:	08 00                	or     %al,(%eax)
 3aa:	00 00                	add    %al,(%eax)
 3ac:	18 40 00             	sbb    %al,0x0(%eax)
 3af:	00 08                	add    %cl,(%eax)
 3b1:	00 00                	add    %al,(%eax)
 3b3:	00 cd                	add    %cl,%ch
 3b5:	11 00                	adc    %eax,(%eax)
 3b7:	00 02                	add    %al,(%edx)
 3b9:	02 00                	add    (%eax),%al
 3bb:	00 ec                	add    %ch,%ah
 3bd:	3f                   	aas    
 3be:	00 00                	add    %al,(%eax)
 3c0:	06                   	push   %es
 3c1:	01 00                	add    %eax,(%eax)
 3c3:	00 f0                	add    %dh,%al
 3c5:	3f                   	aas    
 3c6:	00 00                	add    %al,(%eax)
 3c8:	06                   	push   %es
 3c9:	03 00                	add    (%eax),%eax
 3cb:	00 f4                	add    %dh,%ah
 3cd:	3f                   	aas    
 3ce:	00 00                	add    %al,(%eax)
 3d0:	06                   	push   %es
 3d1:	04 00                	add    $0x0,%al
 3d3:	00 fc                	add    %bh,%ah
 3d5:	3f                   	aas    
 3d6:	00 00                	add    %al,(%eax)
 3d8:	06                   	push   %es
 3d9:	06                   	push   %es
	...

Disassembly of section .rel.plt:

000003dc <.rel.plt>:
 3dc:	0c 40                	or     $0x40,%al
 3de:	00 00                	add    %al,(%eax)
 3e0:	07                   	pop    %es
 3e1:	02 00                	add    (%eax),%al
 3e3:	00 10                	add    %dl,(%eax)
 3e5:	40                   	inc    %eax
 3e6:	00 00                	add    %al,(%eax)
 3e8:	07                   	pop    %es
 3e9:	05                   	.byte 0x5
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 97 00 00 00       	call   10a0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
    100f:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <printf@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <__libc_start_main@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00001050 <__cxa_finalize@plt>:
    1050:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001060 <_start>:
    1060:	31 ed                	xor    %ebp,%ebp
    1062:	5e                   	pop    %esi
    1063:	89 e1                	mov    %esp,%ecx
    1065:	83 e4 f0             	and    $0xfffffff0,%esp
    1068:	50                   	push   %eax
    1069:	54                   	push   %esp
    106a:	52                   	push   %edx
    106b:	e8 22 00 00 00       	call   1092 <_start+0x32>
    1070:	81 c3 90 2f 00 00    	add    $0x2f90,%ebx
    1076:	8d 83 40 d2 ff ff    	lea    -0x2dc0(%ebx),%eax
    107c:	50                   	push   %eax
    107d:	8d 83 e0 d1 ff ff    	lea    -0x2e20(%ebx),%eax
    1083:	50                   	push   %eax
    1084:	51                   	push   %ecx
    1085:	56                   	push   %esi
    1086:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)
    108c:	e8 af ff ff ff       	call   1040 <__libc_start_main@plt>
    1091:	f4                   	hlt    
    1092:	8b 1c 24             	mov    (%esp),%ebx
    1095:	c3                   	ret    
    1096:	66 90                	xchg   %ax,%ax
    1098:	66 90                	xchg   %ax,%ax
    109a:	66 90                	xchg   %ax,%ax
    109c:	66 90                	xchg   %ax,%ax
    109e:	66 90                	xchg   %ax,%ax

000010a0 <__x86.get_pc_thunk.bx>:
    10a0:	8b 1c 24             	mov    (%esp),%ebx
    10a3:	c3                   	ret    
    10a4:	66 90                	xchg   %ax,%ax
    10a6:	66 90                	xchg   %ax,%ax
    10a8:	66 90                	xchg   %ax,%ax
    10aa:	66 90                	xchg   %ax,%ax
    10ac:	66 90                	xchg   %ax,%ax
    10ae:	66 90                	xchg   %ax,%ax

000010b0 <deregister_tm_clones>:
    10b0:	e8 e0 00 00 00       	call   1195 <__x86.get_pc_thunk.dx>
    10b5:	81 c2 4b 2f 00 00    	add    $0x2f4b,%edx
    10bb:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
    10c1:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
    10c7:	39 c8                	cmp    %ecx,%eax
    10c9:	74 1d                	je     10e8 <deregister_tm_clones+0x38>
    10cb:	8b 82 ec ff ff ff    	mov    -0x14(%edx),%eax
    10d1:	85 c0                	test   %eax,%eax
    10d3:	74 13                	je     10e8 <deregister_tm_clones+0x38>
    10d5:	55                   	push   %ebp
    10d6:	89 e5                	mov    %esp,%ebp
    10d8:	83 ec 14             	sub    $0x14,%esp
    10db:	51                   	push   %ecx
    10dc:	ff d0                	call   *%eax
    10de:	83 c4 10             	add    $0x10,%esp
    10e1:	c9                   	leave  
    10e2:	c3                   	ret    
    10e3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    10e7:	90                   	nop
    10e8:	c3                   	ret    
    10e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000010f0 <register_tm_clones>:
    10f0:	e8 a0 00 00 00       	call   1195 <__x86.get_pc_thunk.dx>
    10f5:	81 c2 0b 2f 00 00    	add    $0x2f0b,%edx
    10fb:	55                   	push   %ebp
    10fc:	89 e5                	mov    %esp,%ebp
    10fe:	53                   	push   %ebx
    10ff:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
    1105:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
    110b:	83 ec 04             	sub    $0x4,%esp
    110e:	29 c8                	sub    %ecx,%eax
    1110:	89 c3                	mov    %eax,%ebx
    1112:	c1 e8 1f             	shr    $0x1f,%eax
    1115:	c1 fb 02             	sar    $0x2,%ebx
    1118:	01 d8                	add    %ebx,%eax
    111a:	d1 f8                	sar    %eax
    111c:	74 14                	je     1132 <register_tm_clones+0x42>
    111e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
    1124:	85 d2                	test   %edx,%edx
    1126:	74 0a                	je     1132 <register_tm_clones+0x42>
    1128:	83 ec 08             	sub    $0x8,%esp
    112b:	50                   	push   %eax
    112c:	51                   	push   %ecx
    112d:	ff d2                	call   *%edx
    112f:	83 c4 10             	add    $0x10,%esp
    1132:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1135:	c9                   	leave  
    1136:	c3                   	ret    
    1137:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    113e:	66 90                	xchg   %ax,%ax

00001140 <__do_global_dtors_aux>:
    1140:	55                   	push   %ebp
    1141:	89 e5                	mov    %esp,%ebp
    1143:	53                   	push   %ebx
    1144:	e8 57 ff ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    1149:	81 c3 b7 2e 00 00    	add    $0x2eb7,%ebx
    114f:	83 ec 04             	sub    $0x4,%esp
    1152:	80 bb 48 00 00 00 00 	cmpb   $0x0,0x48(%ebx)
    1159:	75 27                	jne    1182 <__do_global_dtors_aux+0x42>
    115b:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
    1161:	85 c0                	test   %eax,%eax
    1163:	74 11                	je     1176 <__do_global_dtors_aux+0x36>
    1165:	83 ec 0c             	sub    $0xc,%esp
    1168:	ff b3 18 00 00 00    	pushl  0x18(%ebx)
    116e:	e8 dd fe ff ff       	call   1050 <__cxa_finalize@plt>
    1173:	83 c4 10             	add    $0x10,%esp
    1176:	e8 35 ff ff ff       	call   10b0 <deregister_tm_clones>
    117b:	c6 83 48 00 00 00 01 	movb   $0x1,0x48(%ebx)
    1182:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1185:	c9                   	leave  
    1186:	c3                   	ret    
    1187:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    118e:	66 90                	xchg   %ax,%ax

00001190 <frame_dummy>:
    1190:	e9 5b ff ff ff       	jmp    10f0 <register_tm_clones>

00001195 <__x86.get_pc_thunk.dx>:
    1195:	8b 14 24             	mov    (%esp),%edx
    1198:	c3                   	ret    

00001199 <main>:
    1199:	bb 20 40 00 00       	mov    $0x4020,%ebx

0000119e <edit>:
    119e:	8b 03                	mov    (%ebx),%eax
    11a0:	d1 e0                	shl    %eax
    11a2:	89 03                	mov    %eax,(%ebx)
    11a4:	81 fb 48 40 00 00    	cmp    $0x4048,%ebx
    11aa:	74 16                	je     11c2 <new_mas>
    11ac:	83 c3 04             	add    $0x4,%ebx
    11af:	8b 03                	mov    (%ebx),%eax
    11b1:	d1 f8                	sar    %eax
    11b3:	89 03                	mov    %eax,(%ebx)
    11b5:	81 fb 48 40 00 00    	cmp    $0x4048,%ebx
    11bb:	74 05                	je     11c2 <new_mas>
    11bd:	83 c3 04             	add    $0x4,%ebx
    11c0:	eb dc                	jmp    119e <edit>

000011c2 <new_mas>:
    11c2:	83 c3 d8             	add    $0xffffffd8,%ebx

000011c5 <print>:
    11c5:	ff 33                	pushl  (%ebx)
    11c7:	68 1c 40 00 00       	push   $0x401c
    11cc:	e8 fc ff ff ff       	call   11cd <print+0x8>
    11d1:	83 c4 08             	add    $0x8,%esp
    11d4:	83 c3 04             	add    $0x4,%ebx
    11d7:	81 fb 48 40 00 00    	cmp    $0x4048,%ebx
    11dd:	75 e6                	jne    11c5 <print>
    11df:	c3                   	ret    

000011e0 <__libc_csu_init>:
    11e0:	55                   	push   %ebp
    11e1:	e8 5b 00 00 00       	call   1241 <__x86.get_pc_thunk.bp>
    11e6:	81 c5 1a 2e 00 00    	add    $0x2e1a,%ebp
    11ec:	57                   	push   %edi
    11ed:	56                   	push   %esi
    11ee:	53                   	push   %ebx
    11ef:	83 ec 0c             	sub    $0xc,%esp
    11f2:	89 eb                	mov    %ebp,%ebx
    11f4:	8b 7c 24 28          	mov    0x28(%esp),%edi
    11f8:	e8 03 fe ff ff       	call   1000 <_init>
    11fd:	8d 9d e8 fe ff ff    	lea    -0x118(%ebp),%ebx
    1203:	8d 85 e4 fe ff ff    	lea    -0x11c(%ebp),%eax
    1209:	29 c3                	sub    %eax,%ebx
    120b:	c1 fb 02             	sar    $0x2,%ebx
    120e:	74 25                	je     1235 <__libc_csu_init+0x55>
    1210:	31 f6                	xor    %esi,%esi
    1212:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1218:	83 ec 04             	sub    $0x4,%esp
    121b:	57                   	push   %edi
    121c:	ff 74 24 2c          	pushl  0x2c(%esp)
    1220:	ff 74 24 2c          	pushl  0x2c(%esp)
    1224:	ff 94 b5 e4 fe ff ff 	call   *-0x11c(%ebp,%esi,4)
    122b:	83 c6 01             	add    $0x1,%esi
    122e:	83 c4 10             	add    $0x10,%esp
    1231:	39 f3                	cmp    %esi,%ebx
    1233:	75 e3                	jne    1218 <__libc_csu_init+0x38>
    1235:	83 c4 0c             	add    $0xc,%esp
    1238:	5b                   	pop    %ebx
    1239:	5e                   	pop    %esi
    123a:	5f                   	pop    %edi
    123b:	5d                   	pop    %ebp
    123c:	c3                   	ret    
    123d:	8d 76 00             	lea    0x0(%esi),%esi

00001240 <__libc_csu_fini>:
    1240:	c3                   	ret    

00001241 <__x86.get_pc_thunk.bp>:
    1241:	8b 2c 24             	mov    (%esp),%ebp
    1244:	c3                   	ret    

Disassembly of section .fini:

00001248 <_fini>:
    1248:	53                   	push   %ebx
    1249:	83 ec 08             	sub    $0x8,%esp
    124c:	e8 4f fe ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    1251:	81 c3 af 2d 00 00    	add    $0x2daf,%ebx
    1257:	83 c4 08             	add    $0x8,%esp
    125a:	5b                   	pop    %ebx
    125b:	c3                   	ret    

Disassembly of section .rodata:

00002000 <_fp_hw>:
    2000:	03 00                	add    (%eax),%eax
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    %eax,(%eax)
    2006:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

00002008 <__GNU_EH_FRAME_HDR>:
    2008:	01 1b                	add    %ebx,(%ebx)
    200a:	03 3b                	add    (%ebx),%edi
    200c:	38 00                	cmp    %al,(%eax)
    200e:	00 00                	add    %al,(%eax)
    2010:	06                   	push   %es
    2011:	00 00                	add    %al,(%eax)
    2013:	00 18                	add    %bl,(%eax)
    2015:	f0 ff                	lock (bad) 
    2017:	ff 80 00 00 00 48    	incl   0x48000000(%eax)
    201d:	f0 ff                	lock (bad) 
    201f:	ff a4 00 00 00 58 f0 	jmp    *-0xfa80000(%eax,%eax,1)
    2026:	ff                   	(bad)  
    2027:	ff 54 00 00          	call   *0x0(%eax,%eax,1)
    202b:	00 d8                	add    %bl,%al
    202d:	f1                   	icebp  
    202e:	ff                   	(bad)  
    202f:	ff                   	(bad)  
    2030:	b8 00 00 00 38       	mov    $0x38000000,%eax
    2035:	f2 ff                	repnz (bad) 
    2037:	ff 04 01             	incl   (%ecx,%eax,1)
    203a:	00 00                	add    %al,(%eax)
    203c:	39 f2                	cmp    %esi,%edx
    203e:	ff                   	(bad)  
    203f:	ff 18                	lcall  *(%eax)
    2041:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

00002044 <__FRAME_END__-0xf0>:
    2044:	14 00                	adc    $0x0,%al
    2046:	00 00                	add    %al,(%eax)
    2048:	00 00                	add    %al,(%eax)
    204a:	00 00                	add    %al,(%eax)
    204c:	01 7a 52             	add    %edi,0x52(%edx)
    204f:	00 01                	add    %al,(%ecx)
    2051:	7c 08                	jl     205b <__GNU_EH_FRAME_HDR+0x53>
    2053:	01 1b                	add    %ebx,(%ebx)
    2055:	0c 04                	or     $0x4,%al
    2057:	04 88                	add    $0x88,%al
    2059:	01 07                	add    %eax,(%edi)
    205b:	08 10                	or     %dl,(%eax)
    205d:	00 00                	add    %al,(%eax)
    205f:	00 1c 00             	add    %bl,(%eax,%eax,1)
    2062:	00 00                	add    %al,(%eax)
    2064:	fc                   	cld    
    2065:	ef                   	out    %eax,(%dx)
    2066:	ff                   	(bad)  
    2067:	ff 36                	pushl  (%esi)
    2069:	00 00                	add    %al,(%eax)
    206b:	00 00                	add    %al,(%eax)
    206d:	00 00                	add    %al,(%eax)
    206f:	00 14 00             	add    %dl,(%eax,%eax,1)
    2072:	00 00                	add    %al,(%eax)
    2074:	00 00                	add    %al,(%eax)
    2076:	00 00                	add    %al,(%eax)
    2078:	01 7a 52             	add    %edi,0x52(%edx)
    207b:	00 01                	add    %al,(%ecx)
    207d:	7c 08                	jl     2087 <__GNU_EH_FRAME_HDR+0x7f>
    207f:	01 1b                	add    %ebx,(%ebx)
    2081:	0c 04                	or     $0x4,%al
    2083:	04 88                	add    $0x88,%al
    2085:	01 00                	add    %eax,(%eax)
    2087:	00 20                	add    %ah,(%eax)
    2089:	00 00                	add    %al,(%eax)
    208b:	00 1c 00             	add    %bl,(%eax,%eax,1)
    208e:	00 00                	add    %al,(%eax)
    2090:	90                   	nop
    2091:	ef                   	out    %eax,(%dx)
    2092:	ff                   	(bad)  
    2093:	ff 30                	pushl  (%eax)
    2095:	00 00                	add    %al,(%eax)
    2097:	00 00                	add    %al,(%eax)
    2099:	0e                   	push   %cs
    209a:	08 46 0e             	or     %al,0xe(%esi)
    209d:	0c 4a                	or     $0x4a,%al
    209f:	0f 0b                	ud2    
    20a1:	74 04                	je     20a7 <__GNU_EH_FRAME_HDR+0x9f>
    20a3:	78 00                	js     20a5 <__GNU_EH_FRAME_HDR+0x9d>
    20a5:	3f                   	aas    
    20a6:	1a 3b                	sbb    (%ebx),%bh
    20a8:	2a 32                	sub    (%edx),%dh
    20aa:	24 22                	and    $0x22,%al
    20ac:	10 00                	adc    %al,(%eax)
    20ae:	00 00                	add    %al,(%eax)
    20b0:	40                   	inc    %eax
    20b1:	00 00                	add    %al,(%eax)
    20b3:	00 9c ef ff ff 08 00 	add    %bl,0x8ffff(%edi,%ebp,8)
    20ba:	00 00                	add    %al,(%eax)
    20bc:	00 00                	add    %al,(%eax)
    20be:	00 00                	add    %al,(%eax)
    20c0:	48                   	dec    %eax
    20c1:	00 00                	add    %al,(%eax)
    20c3:	00 54 00 00          	add    %dl,0x0(%eax,%eax,1)
    20c7:	00 18                	add    %bl,(%eax)
    20c9:	f1                   	icebp  
    20ca:	ff                   	(bad)  
    20cb:	ff 5d 00             	lcall  *0x0(%ebp)
    20ce:	00 00                	add    %al,(%eax)
    20d0:	00 41 0e             	add    %al,0xe(%ecx)
    20d3:	08 85 02 4c 0e 0c    	or     %al,0xc0e4c02(%ebp)
    20d9:	87 03                	xchg   %eax,(%ebx)
    20db:	41                   	inc    %ecx
    20dc:	0e                   	push   %cs
    20dd:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
    20e3:	83 05 43 0e 20 69 0e 	addl   $0xe,0x69200e43
    20ea:	24 41                	and    $0x41,%al
    20ec:	0e                   	push   %cs
    20ed:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
    20f1:	44                   	inc    %esp
    20f2:	0e                   	push   %cs
    20f3:	30 4d 0e             	xor    %cl,0xe(%ebp)
    20f6:	20 47 0e             	and    %al,0xe(%edi)
    20f9:	14 41                	adc    $0x41,%al
    20fb:	c3                   	ret    
    20fc:	0e                   	push   %cs
    20fd:	10 41 c6             	adc    %al,-0x3a(%ecx)
    2100:	0e                   	push   %cs
    2101:	0c 41                	or     $0x41,%al
    2103:	c7                   	(bad)  
    2104:	0e                   	push   %cs
    2105:	08 41 c5             	or     %al,-0x3b(%ecx)
    2108:	0e                   	push   %cs
    2109:	04 00                	add    $0x0,%al
    210b:	00 10                	add    %dl,(%eax)
    210d:	00 00                	add    %al,(%eax)
    210f:	00 a0 00 00 00 2c    	add    %ah,0x2c000000(%eax)
    2115:	f1                   	icebp  
    2116:	ff                   	(bad)  
    2117:	ff 01                	incl   (%ecx)
    2119:	00 00                	add    %al,(%eax)
    211b:	00 00                	add    %al,(%eax)
    211d:	00 00                	add    %al,(%eax)
    211f:	00 10                	add    %dl,(%eax)
    2121:	00 00                	add    %al,(%eax)
    2123:	00 b4 00 00 00 19 f1 	add    %dh,-0xee70000(%eax,%eax,1)
    212a:	ff                   	(bad)  
    212b:	ff 04 00             	incl   (%eax,%eax,1)
    212e:	00 00                	add    %al,(%eax)
    2130:	00 00                	add    %al,(%eax)
	...

00002134 <__FRAME_END__>:
    2134:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

00003ee4 <__frame_dummy_init_array_entry>:
    3ee4:	90                   	nop
    3ee5:	11 00                	adc    %eax,(%eax)
	...

Disassembly of section .fini_array:

00003ee8 <__do_global_dtors_aux_fini_array_entry>:
    3ee8:	40                   	inc    %eax
    3ee9:	11 00                	adc    %eax,(%eax)
	...

Disassembly of section .dynamic:

00003eec <_DYNAMIC>:
    3eec:	01 00                	add    %eax,(%eax)
    3eee:	00 00                	add    %al,(%eax)
    3ef0:	38 00                	cmp    %al,(%eax)
    3ef2:	00 00                	add    %al,(%eax)
    3ef4:	0c 00                	or     $0x0,%al
    3ef6:	00 00                	add    %al,(%eax)
    3ef8:	00 10                	add    %dl,(%eax)
    3efa:	00 00                	add    %al,(%eax)
    3efc:	0d 00 00 00 48       	or     $0x48000000,%eax
    3f01:	12 00                	adc    (%eax),%al
    3f03:	00 19                	add    %bl,(%ecx)
    3f05:	00 00                	add    %al,(%eax)
    3f07:	00 e4                	add    %ah,%ah
    3f09:	3e 00 00             	add    %al,%ds:(%eax)
    3f0c:	1b 00                	sbb    (%eax),%eax
    3f0e:	00 00                	add    %al,(%eax)
    3f10:	04 00                	add    $0x0,%al
    3f12:	00 00                	add    %al,(%eax)
    3f14:	1a 00                	sbb    (%eax),%al
    3f16:	00 00                	add    %al,(%eax)
    3f18:	e8 3e 00 00 1c       	call   1c003f5b <_end+0x1bffff0f>
    3f1d:	00 00                	add    %al,(%eax)
    3f1f:	00 04 00             	add    %al,(%eax,%eax,1)
    3f22:	00 00                	add    %al,(%eax)
    3f24:	f5                   	cmc    
    3f25:	fe                   	(bad)  
    3f26:	ff 6f ec             	ljmp   *-0x14(%edi)
    3f29:	01 00                	add    %eax,(%eax)
    3f2b:	00 05 00 00 00 8c    	add    %al,0x8c000000
    3f31:	02 00                	add    (%eax),%al
    3f33:	00 06                	add    %al,(%esi)
    3f35:	00 00                	add    %al,(%eax)
    3f37:	00 0c 02             	add    %cl,(%edx,%eax,1)
    3f3a:	00 00                	add    %al,(%eax)
    3f3c:	0a 00                	or     (%eax),%al
    3f3e:	00 00                	add    %al,(%eax)
    3f40:	9d                   	popf   
    3f41:	00 00                	add    %al,(%eax)
    3f43:	00 0b                	add    %cl,(%ebx)
    3f45:	00 00                	add    %al,(%eax)
    3f47:	00 10                	add    %dl,(%eax)
    3f49:	00 00                	add    %al,(%eax)
    3f4b:	00 15 00 00 00 00    	add    %dl,0x0
    3f51:	00 00                	add    %al,(%eax)
    3f53:	00 03                	add    %al,(%ebx)
    3f55:	00 00                	add    %al,(%eax)
    3f57:	00 00                	add    %al,(%eax)
    3f59:	40                   	inc    %eax
    3f5a:	00 00                	add    %al,(%eax)
    3f5c:	02 00                	add    (%eax),%al
    3f5e:	00 00                	add    %al,(%eax)
    3f60:	10 00                	adc    %al,(%eax)
    3f62:	00 00                	add    %al,(%eax)
    3f64:	14 00                	adc    $0x0,%al
    3f66:	00 00                	add    %al,(%eax)
    3f68:	11 00                	adc    %eax,(%eax)
    3f6a:	00 00                	add    %al,(%eax)
    3f6c:	17                   	pop    %ss
    3f6d:	00 00                	add    %al,(%eax)
    3f6f:	00 dc                	add    %bl,%ah
    3f71:	03 00                	add    (%eax),%eax
    3f73:	00 11                	add    %dl,(%ecx)
    3f75:	00 00                	add    %al,(%eax)
    3f77:	00 6c 03 00          	add    %ch,0x0(%ebx,%eax,1)
    3f7b:	00 12                	add    %dl,(%edx)
    3f7d:	00 00                	add    %al,(%eax)
    3f7f:	00 70 00             	add    %dh,0x0(%eax)
    3f82:	00 00                	add    %al,(%eax)
    3f84:	13 00                	adc    (%eax),%eax
    3f86:	00 00                	add    %al,(%eax)
    3f88:	08 00                	or     %al,(%eax)
    3f8a:	00 00                	add    %al,(%eax)
    3f8c:	16                   	push   %ss
    3f8d:	00 00                	add    %al,(%eax)
    3f8f:	00 00                	add    %al,(%eax)
    3f91:	00 00                	add    %al,(%eax)
    3f93:	00 1e                	add    %bl,(%esi)
    3f95:	00 00                	add    %al,(%eax)
    3f97:	00 04 00             	add    %al,(%eax,%eax,1)
    3f9a:	00 00                	add    %al,(%eax)
    3f9c:	fb                   	sti    
    3f9d:	ff                   	(bad)  
    3f9e:	ff 6f 00             	ljmp   *0x0(%edi)
    3fa1:	00 00                	add    %al,(%eax)
    3fa3:	08 fe                	or     %bh,%dh
    3fa5:	ff                   	(bad)  
    3fa6:	ff 6f 3c             	ljmp   *0x3c(%edi)
    3fa9:	03 00                	add    (%eax),%eax
    3fab:	00 ff                	add    %bh,%bh
    3fad:	ff                   	(bad)  
    3fae:	ff 6f 01             	ljmp   *0x1(%edi)
    3fb1:	00 00                	add    %al,(%eax)
    3fb3:	00 f0                	add    %dh,%al
    3fb5:	ff                   	(bad)  
    3fb6:	ff 6f 2a             	ljmp   *0x2a(%edi)
    3fb9:	03 00                	add    (%eax),%eax
    3fbb:	00 fa                	add    %bh,%dl
    3fbd:	ff                   	(bad)  
    3fbe:	ff 6f 09             	ljmp   *0x9(%edi)
	...

Disassembly of section .got:

00003fec <.got>:
	...
    3ff8:	99                   	cltd   
    3ff9:	11 00                	adc    %eax,(%eax)
    3ffb:	00 00                	add    %al,(%eax)
    3ffd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

00004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	ec                   	in     (%dx),%al
    4001:	3e 00 00             	add    %al,%ds:(%eax)
	...
    400c:	36 10 00             	adc    %al,%ss:(%eax)
    400f:	00 46 10             	add    %al,0x10(%esi)
	...

Disassembly of section .data:

00004014 <__data_start>:
    4014:	00 00                	add    %al,(%eax)
	...

00004018 <__dso_handle>:
    4018:	18 40 00             	sbb    %al,0x0(%eax)
	...

0000401c <print_format>:
    401c:	25 64 20 00        	and    $0x1002064,%eax

00004020 <mas>:
    4020:	01 00                	add    %eax,(%eax)
    4022:	00 00                	add    %al,(%eax)
    4024:	02 00                	add    (%eax),%al
    4026:	00 00                	add    %al,(%eax)
    4028:	03 00                	add    (%eax),%eax
    402a:	00 00                	add    %al,(%eax)
    402c:	04 00                	add    $0x0,%al
    402e:	00 00                	add    %al,(%eax)
    4030:	05 00 00 00 06       	add    $0x6000000,%eax
    4035:	00 00                	add    %al,(%eax)
    4037:	00 07                	add    %al,(%edi)
    4039:	00 00                	add    %al,(%eax)
    403b:	00 08                	add    %cl,(%eax)
    403d:	00 00                	add    %al,(%eax)
    403f:	00 09                	add    %cl,(%ecx)
    4041:	00 00                	add    %al,(%eax)
    4043:	00 0a                	add    %cl,(%edx)
    4045:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

00004048 <completed.0>:
    4048:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 44 65 62          	sub    %al,0x62(%ebp,%eiz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%ecx),%esp
  10:	32 2e                	xor    (%esi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936
  18:	30 2e                	xor    %ch,(%esi)
  1a:	32 2e                	xor    (%esi),%ch
  1c:	31 20                	xor    %esp,(%eax)
  1e:	32 30                	xor    (%eax),%dh
  20:	32 31                	xor    (%ecx),%dh
  22:	30 31                	xor    %dh,(%ecx)
  24:	31 30                	xor    %esi,(%eax)
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	99                   	cltd   
  11:	11 00                	adc    %eax,(%eax)
  13:	00 47 00             	add    %al,0x0(%edi)
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	22 00                	and    (%eax),%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 01                	add    $0x1,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	99                   	cltd   
  11:	11 00                	adc    %eax,(%eax)
  13:	00 e0                	add    %ah,%al
  15:	11 00                	adc    %eax,(%eax)
  17:	00 00                	add    %al,(%eax)
  19:	00 00                	add    %al,(%eax)
  1b:	00 07                	add    %al,(%edi)
  1d:	00 00                	add    %al,(%eax)
  1f:	00 09                	add    %cl,(%ecx)
  21:	00 00                	add    %al,(%eax)
  23:	00 01                	add    %al,(%ecx)
  25:	80                   	.byte 0x80

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	00 10                	add    %dl,(%eax)
   4:	06                   	push   %es
   5:	11 01                	adc    %eax,(%ecx)
   7:	12 01                	adc    (%ecx),%al
   9:	03 0e                	add    (%esi),%ecx
   b:	1b 0e                	sbb    (%esi),%ecx
   d:	25 0e 13 05 00       	and    $0x5130e,%eax
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	48                   	dec    %eax
   1:	00 00                	add    %al,(%eax)
   3:	00 03                	add    %al,(%ebx)
   5:	00 1d 00 00 00 01    	add    %bl,0x1000000
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 6c 61 62          	add    %ch,0x62(%ecx,%eiz,2)
  1f:	32 2e                	xor    (%esi),%ch
  21:	73 00                	jae    23 <_init-0xfdd>
  23:	00 00                	add    %al,(%eax)
  25:	00 00                	add    %al,(%eax)
  27:	00 05 02 99 11 00    	add    %al,0x119902
  2d:	00 03                	add    %al,(%ebx)
  2f:	0c 01                	or     $0x1,%al
  31:	5b                   	pop    %ebx
  32:	2f                   	das    
  33:	2f                   	das    
  34:	2f                   	das    
  35:	67 2f                	addr16 das 
  37:	3d 2f 2f 2f 67       	cmp    $0x672f2f2f,%eax
  3c:	2f                   	das    
  3d:	3d 31 3f 2f 59       	cmp    $0x592f3f31,%eax
  42:	59                   	pop    %ecx
  43:	3d 3d 67 2f 02       	cmp    $0x22f673d,%eax
  48:	01 00                	add    %eax,(%eax)
  4a:	01 01                	add    %eax,(%ecx)

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%edi)
   1:	61                   	popa   
   2:	62 32                	bound  %esi,(%edx)
   4:	2e 73 00             	jae,pn 7 <_init-0xff9>
   7:	2f                   	das    
   8:	00 47 4e             	add    %al,0x4e(%edi)
   b:	55                   	push   %ebp
   c:	20 41 53             	and    %al,0x53(%ecx)
   f:	20 32                	and    %dh,(%edx)
  11:	2e                   	cs
  12:	33                   	.byte 0x33
  13:	35                   	.byte 0x35
  14:	2e 32 00             	xor    %cs:(%eax),%al
